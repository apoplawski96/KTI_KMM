[
  {
    "id": 1,
    "question": "What are Coroutines in Android?",
    "answer": "Coroutines are a concurrency design pattern introduced in Kotlin. They provide a way to write asynchronous and non-blocking code in a sequential and more readable manner.",
    "difficulty": "Easy",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Coroutines",
    "subCategoryId": 1
  },
  {
    "id": 2,
    "question": "What are the main advantages of using Coroutines in Android development?",
    "answer": "Coroutines offer several benefits, such as simplified concurrency, structured concurrency, easy cancellation, built-in support for asynchronous operations, and seamless integration with Kotlin.",
    "difficulty": "Medium",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Coroutines",
    "subCategoryId": 1
  },
  {
    "id": 3,
    "question": "What is the difference between launch() and async() functions in Coroutines?",
    "answer": "The launch() function is used for fire-and-forget style operations, while the async() function is used when you need to obtain a result from the coroutine. The async() function returns a deferred value that can be used to retrieve the result later.",
    "difficulty": "Medium",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Coroutines",
    "subCategoryId": 1
  },
  {
    "id": 4,
    "question": "How can you handle exceptions in Coroutines?",
    "answer": "In Coroutines, you can handle exceptions using try-catch blocks within the coroutine or by using the CoroutineExceptionHandler to handle uncaught exceptions in a centralized manner.",
    "difficulty": "Easy",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Coroutines",
    "subCategoryId": 1
  },
  {
    "id": 5,
    "question": "What is a CoroutineScope in Android?",
    "answer": "A CoroutineScope is an interface provided by the Coroutine library that defines a context for coroutines. It manages the lifecycle of coroutines and provides the necessary functions to launch and manage coroutines within its scope.",
    "difficulty": "Easy",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Coroutines",
    "subCategoryId": 1
  },
  {
    "id": 6,
    "question": "What is an Activity in Android?",
    "answer": "An Activity represents a single screen with a user interface in an Android application. It is a fundamental component of an Android app and serves as the entry point for interacting with the user.",
    "difficulty": "Easy",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Basic",
    "subCategoryId": 2
  },
  {
    "id": 7,
    "question": "What is the AndroidManifest.xml file used for?",
    "answer": "The AndroidManifest.xml file contains essential information about an Android application. It defines the app's package name, permissions, components (such as activities, services, and broadcast receivers), and other configurations required for the app to run.",
    "difficulty": "Easy",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Basic",
    "subCategoryId": 2
  },
  {
    "id": 8,
    "question": "What is Jetpack Compose?",
    "answer": "Jetpack Compose is a modern toolkit for building native Android UI using a declarative approach. It simplifies the UI development process and offers a more efficient way to create dynamic and interactive user interfaces.",
    "difficulty": "Medium",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Compose",
    "subCategoryId": 3
  },
  {
    "id": 9,
    "question": "What are the key benefits of using Jetpack Compose?",
    "answer": "Jetpack Compose provides benefits such as simplified UI development, declarative UI programming model, efficient UI updates with state management, built-in support for theming and animations, and improved testing and debugging capabilities.",
    "difficulty": "Medium",
    "topCategory": "Android",
    "topCategoryId": 1,
    "subCategory": "Compose",
    "subCategoryId": 3
  }
]
